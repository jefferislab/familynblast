% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/final_loadings_families.R
\name{neurons_against_fam}
\alias{neurons_against_fam}
\title{Computing the score of one neuron against a particular family, given the
index of the name of the family in correct_families}
\usage{
neurons_against_fam(listneurons, familyind, computedens = FALSE,
  zeroscore = -100)
}
\arguments{
\item{listneurons}{Either names of flycircuit neurons or a
\code{\link[nat]{neuronlist}} object containing actual neurons (which will
be passed to \code{\link{voxel_dens}}).}

\item{familyind}{Index of the family we want to test neurons against (either
numeric or character vector, see examples)}

\item{computedens}{Whether or not to compute densities (which would be
necessary for non-flycircuit neurons)}

\item{zeroscore}{Log score to use when a neuron occupies a supervoxel that is
not overlapped by any family member.}
}
\description{
Computing the score of one neuron against a particular family, given the
index of the name of the family in correct_families
}
\examples{
# One neuron against a specific family
neurons_against_fam(kcs20[1], "gamma Kenyon cell")
# multiple neurons against a specific family
neurons_against_fam(kcs20, "gamma Kenyon cell")

# find the KC families that we know about
kcfams=grep("Kenyon", names(correct_families), value = T)
# compare all neurons against all families
res=sapply(kcfams, function(fam) neurons_against_fam(kcs20, fam))
# make a prediction using the class of max score
pred=colnames(res)[apply(res,1, which.max)]
maxscore=apply(res, 1,max)
# compare with manually defined type, NB there is no family definition
# for alpha'/beta' KCs at the moment so these are predicted as a/B
# but have slightly lower scores than the real a/B neurons
cbind(kcs20[,c("Name","type")], pred, max=maxscore)
}
\seealso{
Other find.family: \code{\link{find_neurons_family}},
  \code{\link{find_scores_family}}
}

